题目：实现一个特殊的栈，在拥有栈功能的前提下，需要有一个返回当前栈最小值的功能。
要求：
1.pop、push、getMin等的操作复杂度都是O(1)
2.可以使用现成的Java栈对象

思路：
方案一：
用一个多余的栈stackMin记录每一步操作的最小值，另一个栈stackData用于保存数据。
当有数据压栈时，push操作：
1.若stackMin为空，则stackMin和StackData都入栈。
2.若stackMin不为空，比较入栈值和stackMin栈顶元素大小，若小于等于，则stackMin和StackData都入栈。反之不入栈。
当有数据出栈时，pop操作：
StackData弹出最顶层元素，比较该元素与stackMin栈顶元素大小，
1.若大于，则直接返回该元素
2.若等于，则stackMin弹出最顶层元素，返回StackData栈顶元素
当有查询栈最小值操作时：
返回stackMin栈顶元素。

方案二：
用一个多余的栈stackMin记录每一步操作的最小值，另一个栈stackData用于保存数据。
当有数据压栈时，push操作：
1.若stackMin为空，则stackMin和StackData都入栈。
2.若stackMin不为空，比较入栈值和stackMin栈顶元素大小，若小于等于，则stackMin和StackData都入栈。反之，
  StackData入栈该元素，stackMin入栈当前stackMin栈顶元素。
当有数据出栈时，pop操作：
StackData和stackMin都弹出栈顶元素。
当有查询栈最小值操作时：
返回stackMin栈顶元素。

两种方案比较：
方案一.时间换空间，通过弹出时进行比较操作，节省空间
方案二.时间换空间，通过入栈时多保存一份最小值，使得两个数据栈对象大小相等，从而直接返回，节省时间。